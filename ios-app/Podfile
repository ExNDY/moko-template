source 'https://cdn.cocoapods.org/'

# ignore all warnings from all pods
inhibit_all_warnings!

use_frameworks!
platform :ios, '12.0'

# workaround for https://github.com/CocoaPods/CocoaPods/issues/8073
# need for correct invalidate of cache MultiPlatformLibrary.framework
install! 'cocoapods', :disable_input_output_paths => true

pre_install do |installer|
  # We represent a Kotlin/Native module to CocoaPods as a vendored framework.
  # CocoaPods needs access to such frameworks during installation process to obtain
  # their type (static or dynamic) and configure the Xcode project accordingly.
  # Build MultiPlatformLibrary framework to correct install Pod
  puts "prepare MultiPlatformLibrary.framework (require some time...)"
  `cd .. && ./gradlew :mpp-library:syncMultiPlatformLibraryDebugFrameworkIosX64`
  puts "preparing MultiPlatformLibrary.framework complete"
end

target 'ios-app' do
  pod 'MultiPlatformLibrary', :path => '../mpp-library'
  pod 'MultiPlatformLibraryUnits', :git => 'https://github.com/icerockdev/moko-units.git', :tag => 'release/0.8.0'
  pod 'SkyFloatingLabelTextField', '~> 3.8.0'
end

post_install do |installer|
  host_targets = installer.aggregate_targets.select { |aggregate_target|
    aggregate_target.name.include? "Pods-"
  }
  
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
    end
    if ['MultiPlatformLibrary', 'MultiPlatformLibraryMvvm', 'MultiPlatformLibraryUnits'].include? t.name
      t.build_configurations.each do |config|
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
    end
  end
end
